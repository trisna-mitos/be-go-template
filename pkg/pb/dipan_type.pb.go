// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: pkg/pb/dipan_type.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DipanType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NamaType      string                 `protobuf:"bytes,2,opt,name=nama_type,json=namaType,proto3" json:"nama_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DipanType) Reset() {
	*x = DipanType{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DipanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DipanType) ProtoMessage() {}

func (x *DipanType) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DipanType.ProtoReflect.Descriptor instead.
func (*DipanType) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{0}
}

func (x *DipanType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DipanType) GetNamaType() string {
	if x != nil {
		return x.NamaType
	}
	return ""
}

type CreateDipanTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamaType      string                 `protobuf:"bytes,1,opt,name=nama_type,json=namaType,proto3" json:"nama_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDipanTypeRequest) Reset() {
	*x = CreateDipanTypeRequest{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDipanTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDipanTypeRequest) ProtoMessage() {}

func (x *CreateDipanTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDipanTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateDipanTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDipanTypeRequest) GetNamaType() string {
	if x != nil {
		return x.NamaType
	}
	return ""
}

type GetDipanTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDipanTypeRequest) Reset() {
	*x = GetDipanTypeRequest{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDipanTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDipanTypeRequest) ProtoMessage() {}

func (x *GetDipanTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDipanTypeRequest.ProtoReflect.Descriptor instead.
func (*GetDipanTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{2}
}

func (x *GetDipanTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListDipanTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDipanTypesRequest) Reset() {
	*x = ListDipanTypesRequest{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDipanTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDipanTypesRequest) ProtoMessage() {}

func (x *ListDipanTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDipanTypesRequest.ProtoReflect.Descriptor instead.
func (*ListDipanTypesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{3}
}

func (x *ListDipanTypesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDipanTypesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListDipanTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DipanTypes    []*DipanType           `protobuf:"bytes,1,rep,name=dipan_types,json=dipanTypes,proto3" json:"dipan_types,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDipanTypesResponse) Reset() {
	*x = ListDipanTypesResponse{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDipanTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDipanTypesResponse) ProtoMessage() {}

func (x *ListDipanTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDipanTypesResponse.ProtoReflect.Descriptor instead.
func (*ListDipanTypesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{4}
}

func (x *ListDipanTypesResponse) GetDipanTypes() []*DipanType {
	if x != nil {
		return x.DipanTypes
	}
	return nil
}

func (x *ListDipanTypesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateDipanTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NamaType      string                 `protobuf:"bytes,2,opt,name=nama_type,json=namaType,proto3" json:"nama_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDipanTypeRequest) Reset() {
	*x = UpdateDipanTypeRequest{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDipanTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDipanTypeRequest) ProtoMessage() {}

func (x *UpdateDipanTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDipanTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDipanTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDipanTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDipanTypeRequest) GetNamaType() string {
	if x != nil {
		return x.NamaType
	}
	return ""
}

type DeleteDipanTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDipanTypeRequest) Reset() {
	*x = DeleteDipanTypeRequest{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDipanTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDipanTypeRequest) ProtoMessage() {}

func (x *DeleteDipanTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDipanTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteDipanTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDipanTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteDipanTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDipanTypeResponse) Reset() {
	*x = DeleteDipanTypeResponse{}
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDipanTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDipanTypeResponse) ProtoMessage() {}

func (x *DeleteDipanTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_dipan_type_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDipanTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteDipanTypeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_dipan_type_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDipanTypeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_pkg_pb_dipan_type_proto protoreflect.FileDescriptor

var file_pkg_pb_dipan_type_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x69, 0x70, 0x61, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x09, 0x44,
	0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x70, 0x61, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x0b, 0x64, 0x69, 0x70, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x70, 0x61, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xed, 0x03, 0x0a,
	0x10, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x70, 0x61, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x69, 0x70, 0x61, 0x6e, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x69, 0x70, 0x61, 0x6e, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x60, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x70,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x70, 0x61, 0x6e, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x70,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x69, 0x70, 0x61, 0x6e, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x68, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x70, 0x61,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x70, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x70,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x70, 0x61,
	0x6e, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x1b, 0x5a, 0x19,
	0x67, 0x6f, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_pkg_pb_dipan_type_proto_rawDescOnce sync.Once
	file_pkg_pb_dipan_type_proto_rawDescData []byte
)

func file_pkg_pb_dipan_type_proto_rawDescGZIP() []byte {
	file_pkg_pb_dipan_type_proto_rawDescOnce.Do(func() {
		file_pkg_pb_dipan_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_pb_dipan_type_proto_rawDesc), len(file_pkg_pb_dipan_type_proto_rawDesc)))
	})
	return file_pkg_pb_dipan_type_proto_rawDescData
}

var file_pkg_pb_dipan_type_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_pb_dipan_type_proto_goTypes = []any{
	(*DipanType)(nil),               // 0: pb.DipanType
	(*CreateDipanTypeRequest)(nil),  // 1: pb.CreateDipanTypeRequest
	(*GetDipanTypeRequest)(nil),     // 2: pb.GetDipanTypeRequest
	(*ListDipanTypesRequest)(nil),   // 3: pb.ListDipanTypesRequest
	(*ListDipanTypesResponse)(nil),  // 4: pb.ListDipanTypesResponse
	(*UpdateDipanTypeRequest)(nil),  // 5: pb.UpdateDipanTypeRequest
	(*DeleteDipanTypeRequest)(nil),  // 6: pb.DeleteDipanTypeRequest
	(*DeleteDipanTypeResponse)(nil), // 7: pb.DeleteDipanTypeResponse
}
var file_pkg_pb_dipan_type_proto_depIdxs = []int32{
	0, // 0: pb.ListDipanTypesResponse.dipan_types:type_name -> pb.DipanType
	1, // 1: pb.DipanTypeService.CreateDipanType:input_type -> pb.CreateDipanTypeRequest
	2, // 2: pb.DipanTypeService.GetDipanType:input_type -> pb.GetDipanTypeRequest
	3, // 3: pb.DipanTypeService.ListDipanTypes:input_type -> pb.ListDipanTypesRequest
	5, // 4: pb.DipanTypeService.UpdateDipanType:input_type -> pb.UpdateDipanTypeRequest
	6, // 5: pb.DipanTypeService.DeleteDipanType:input_type -> pb.DeleteDipanTypeRequest
	0, // 6: pb.DipanTypeService.CreateDipanType:output_type -> pb.DipanType
	0, // 7: pb.DipanTypeService.GetDipanType:output_type -> pb.DipanType
	4, // 8: pb.DipanTypeService.ListDipanTypes:output_type -> pb.ListDipanTypesResponse
	0, // 9: pb.DipanTypeService.UpdateDipanType:output_type -> pb.DipanType
	7, // 10: pb.DipanTypeService.DeleteDipanType:output_type -> pb.DeleteDipanTypeResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_pb_dipan_type_proto_init() }
func file_pkg_pb_dipan_type_proto_init() {
	if File_pkg_pb_dipan_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_pb_dipan_type_proto_rawDesc), len(file_pkg_pb_dipan_type_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_dipan_type_proto_goTypes,
		DependencyIndexes: file_pkg_pb_dipan_type_proto_depIdxs,
		MessageInfos:      file_pkg_pb_dipan_type_proto_msgTypes,
	}.Build()
	File_pkg_pb_dipan_type_proto = out.File
	file_pkg_pb_dipan_type_proto_goTypes = nil
	file_pkg_pb_dipan_type_proto_depIdxs = nil
}
